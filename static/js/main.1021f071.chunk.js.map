{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","toggleReminder","taskToToggle","updTask","method","headers","body","JSON","stringify","addTask","deleteTask","filter","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1021f071.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button \r\n            onClick={onClick}\r\n            style={{backgroundColor: color}} \r\n            className='btn'\r\n        >\r\n        {text}\r\n        </button>\r\n\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/react-task-manager-app' && <Button color={showAdd ? 'red' : 'green'}\r\n                text={showAdd ? 'Close' : 'Add'}\r\n                onClick={onAdd}\r\n\r\n            />}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// Css in JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nfunction Task({ task, onDelete, onToggle }) {\r\n    return (\r\n        <div \r\n            className={`task ${task.reminder ? 'reminder' : ''}`}\r\n            onDoubleClick={() =>\r\n            onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}{' '}\r\n                <FaTimes\r\n                    style={{\r\n                        color: 'red',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task'\r\n                    value={text} onChange={(e) =>\r\n                        setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time'\r\n                    value={day} onChange={(e) =>\r\n                        setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                    checked={reminder}\r\n                    value={reminder} onChange={(e) =>\r\n                        setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task'\r\n                className='btn btn-block'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to = \"/react-task-manager-app/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/react-task-manager-app\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from './components/Header'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('https://react-task-manager-db.herokuapp.com/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`https://react-task-manager-db.herokuapp.com/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    }\n\n    const res = await fetch(`https://react-task-manager-db.herokuapp.com/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? {\n          ...task, reminder: data.reminder\n        } : task\n      ))\n  }\n\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('https://react-task-manager-db.herokuapp.com/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`https://react-task-manager-db.herokuapp.com/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route path='/react-task-manager-app' exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder} />\n            ) : (\n              'Nothing planned yet!'\n            )}\n          </>\n        )} />\n        <Route path='/react-task-manager-app/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}